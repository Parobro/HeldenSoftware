/*
 * Decompiled with CFR 0.152.
 */
package helden.framework.D.Object;

import helden.framework.C.I;
import helden.framework.D.OOOo;
import helden.framework.D.OoOO.D;
import helden.framework.D.OoOO.U;
import helden.framework.D.P;
import helden.framework.D.void;
import helden.framework.D.while;
import helden.framework.OOoO.o0Oo;
import helden.framework.OoOO.voidsuper;
import helden.framework.bedingungen.Bedingung;
import helden.framework.bedingungen.BedingungsVerknuepfung;
import helden.framework.bedingungen.VerknuepfungsArt;
import helden.framework.d.oooo.h_0;
import helden.framework.d.oooo.oo0ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo_0;
import helden.framework.oooo.b_0;
import helden.framework.oooo.oooo_4;
import helden.framework.oooo.oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo_1;
import java.util.ArrayList;
import java.util.HashSet;

public final class E {
    protected static void o00000(OOOo oOOo) {
        P p2 = P.\u00d300000(while.\u00d2\u00d6o000.toString(), 150);
        BedingungsVerknuepfung bedingungsVerknuepfung = new BedingungsVerknuepfung(VerknuepfungsArt.o00000);
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(b_0.returnwhilesuper, (Integer)12));
        bedingungsVerknuepfung.addBedingung(Bedingung.hatNicht(I.\u00d5\u00d40000));
        bedingungsVerknuepfung.addBedingung(Bedingung.hatNicht(I.nullObjectsuper));
        p2.o00000(bedingungsVerknuepfung);
        p2.o00000(7);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.o\u00f8\u00f5000.toString(), 150);
        bedingungsVerknuepfung = new BedingungsVerknuepfung(VerknuepfungsArt.o00000);
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(b_0.returnwhilesuper, (Integer)12));
        bedingungsVerknuepfung.addBedingung(Bedingung.hatNicht(I.\u00d80\u00d2000));
        bedingungsVerknuepfung.addBedingung(Bedingung.hatNicht(I.o\u00d3O000));
        p2.o00000(bedingungsVerknuepfung);
        p2.o00000(7);
        oOOo.o00000(p2);
        oOOo.o00000(new oo0ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo_0());
        p2 = P.\u00d300000(while.\u00f8\u00d5\u00d2000.toString(), 100);
        bedingungsVerknuepfung = new BedingungsVerknuepfung(VerknuepfungsArt.o00000);
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(voidsuper.\u00f5o\u00d6000, (Integer)5));
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(voidsuper.\u00d3\u00f4\u00d5000, (Integer)7));
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(voidsuper.forpublicObject, (Integer)5));
        bedingungsVerknuepfung.addBedingung(Bedingung.hatSchrift(7));
        p2.o00000(bedingungsVerknuepfung);
        p2.o00000(2);
        oOOo.o00000(p2);
        U u2 = new U();
        u2.o00000(7);
        oOOo.o00000(u2);
        p2 = P.\u00d300000(while.\u00d2\u00d6\u00d2000.toString(), 200);
        bedingungsVerknuepfung = new BedingungsVerknuepfung(VerknuepfungsArt.o00000);
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(b_0.O\u00f5\u00d2000, (Integer)12));
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)12));
        p2.o00000(bedingungsVerknuepfung);
        p2.o00000(7);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.\u00f8\u00f6\u00d5000.toString(), 200);
        bedingungsVerknuepfung = new BedingungsVerknuepfung(VerknuepfungsArt.o00000);
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(b_0.newwhilesuper, (Integer)12));
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)12));
        p2.o00000(bedingungsVerknuepfung);
        p2.o00000(4);
        oOOo.o00000(p2);
        D d2 = new D();
        d2.o00000(7);
        oOOo.o00000(d2);
        p2 = P.\u00d300000(while.ifpublicObject.toString(), 100);
        bedingungsVerknuepfung = new BedingungsVerknuepfung(VerknuepfungsArt.o00000);
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(voidsuper.\u00d5O\u00d6000, (Integer)7));
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(voidsuper.forclassObject, (Integer)7));
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(voidsuper.\u00d8\u00d5\u00d5000, (Integer)7));
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(voidsuper.\u00d30\u00d8000, (Integer)7));
        p2.o00000(bedingungsVerknuepfung);
        p2.o00000(4);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.o\u00f4\u00d5000.toString(), 200);
        bedingungsVerknuepfung = new BedingungsVerknuepfung(VerknuepfungsArt.o00000);
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(b_0.newwhilesuper, (Integer)12));
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)12));
        p2.o00000(bedingungsVerknuepfung);
        p2.o00000(3);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.\u00d8\u00d8\u00d2000.toString(), 200);
        bedingungsVerknuepfung = new BedingungsVerknuepfung(VerknuepfungsArt.o00000);
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(b_0.\u00f4\u00f4\u00d2000, (Integer)12));
        p2.o00000(bedingungsVerknuepfung);
        p2.o00000(4);
        oOOo.o00000(p2);
        HashSet<String> hashSet = new HashSet<String>();
        hashSet.add("Kopf");
        hashSet.add("Rumpf");
        hashSet.add("Brust");
        hashSet.add("R\u00fccken");
        hashSet.add("Bauch");
        hashSet.add("Arme");
        hashSet.add("Fl\u00fcgel");
        hashSet.add("Beine");
        p2 = new void(while.\u00d3\u00d40000.toString(), 100, hashSet, 0);
        bedingungsVerknuepfung = new BedingungsVerknuepfung(VerknuepfungsArt.o00000);
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(voidsuper.\u00d5\u00d3\u00d8000, (Integer)10));
        bedingungsVerknuepfung.addBedingung(Bedingung.hat(voidsuper.\u00d5\u00d5\u00d6000, (Integer)10));
        p2.o00000(bedingungsVerknuepfung);
        p2.o00000(3);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.\u00d8O\u00d4000.toString(), 200);
        p2.o00000(new BedingungsVerknuepfung(VerknuepfungsArt.o00000, Bedingung.hat(b_0.newwhilesuper, (Integer)12), Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)12)));
        p2.o00000(3);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.\u00d6\u00d50000.toString(), 200);
        p2.o00000(BedingungsVerknuepfung.AND(Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)14), Bedingung.hat(while.\u00d6o\u00f4000), Bedingung.hatTalentgruppenTalente(oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo_1.\u00d800000, 1, 3)));
        p2.o00000(3);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.\u00d8\u00d6\u00d8000.toString(), 200);
        p2.o00000(new BedingungsVerknuepfung(VerknuepfungsArt.o00000, Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)15), Bedingung.hat(while.\u00d6\u00d50000)));
        p2.o00000(3);
        oOOo.o00000(p2);
        oOOo.o00000(new h_0());
        p2 = P.\u00d300000(while.\u00d3o\u00d8000.toString(), 250);
        p2.o00000(BedingungsVerknuepfung.AND(Bedingung.hat(b_0.whilewhilesuper, (Integer)13), Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)13), Bedingung.hat(voidsuper.\u00d8\u00d8\u00d5000, (Integer)9), BedingungsVerknuepfung.OR(Bedingung.hat(while.ifinterfaceObject), Bedingung.hat(while.\u00d3\u00d6\u00d3000), Bedingung.hat(while.\u00f5\u00f6\u00d2000)), BedingungsVerknuepfung.AND(Bedingung.hatSfAuswahl(while.\u00d5\u00d2o000, o0Oo.\u00d4O0000), Bedingung.hatSfAuswahl(while.\u00d5\u00d2o000, o0Oo.\u00f500000))));
        p2.o00000(5);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.whileintnew.toString(), 100);
        p2.o00000(BedingungsVerknuepfung.AND(Bedingung.hat(b_0.\u00f4\u00f4\u00d2000, (Integer)14), Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)14), Bedingung.hat(voidsuper.\u00d8\u00d8\u00d5000, (Integer)12), Bedingung.hat(oooo_4.\u00f8\u00d5\u00f5O00, (Integer)7), Bedingung.hat(while.\u00d3o\u00d8000)));
        p2.o00000(5);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.\u00f6\u00f8\u00f5000.toString(), 150);
        p2.o00000(BedingungsVerknuepfung.AND(Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)14), Bedingung.hat(b_0.O\u00f5\u00d2000, (Integer)14), Bedingung.hat(voidsuper.\u00d8\u00d8\u00d5000, (Integer)12), Bedingung.hat(oooo_4.\u00f8\u00d5\u00f5O00, (Integer)7), Bedingung.hat(while.\u00d3o\u00d8000)));
        p2.o00000(4);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.o\u00d2\u00d6000.toString(), 200);
        p2.o00000(BedingungsVerknuepfung.AND(Bedingung.hat(b_0.newwhilesuper, (Integer)14), Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)14), Bedingung.hat(voidsuper.\u00d8\u00d8\u00d5000, (Integer)12), Bedingung.hat(voidsuper.StringvoidObject, (Integer)7), Bedingung.hat(oooo_4.\u00f8\u00d5\u00f5O00, (Integer)10), Bedingung.hat(while.\u00d3o\u00d8000)));
        p2.o00000(4);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.\u00f8\u00d4O000.toString(), 200);
        p2.o00000(BedingungsVerknuepfung.AND(Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)14), Bedingung.hat(b_0.\u00d5\u00f4\u00d2000, (Integer)14), Bedingung.hat(voidsuper.\u00d8\u00d8\u00d5000, (Integer)12), Bedingung.hat(oooo_4.\u00f8\u00d5\u00f5O00, (Integer)10), Bedingung.hat(while.\u00d3o\u00d8000), Bedingung.hat(while.\u00d6\u00d50000)));
        p2.o00000(2);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.\u00f8\u00d8\u00d8000.toString(), 200);
        p2.o00000(BedingungsVerknuepfung.AND(Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)15), Bedingung.hat(b_0.\u00d5\u00f4\u00d2000, (Integer)14), Bedingung.hat(oooo_4.\u00f8\u00d5\u00f5O00, (Integer)12), Bedingung.hatSfAuswahl(while.\u00d3\u00f5\u00f6000, o0Oo.\u00d4O0000), Bedingung.hat(while.\u00d3o\u00d8000)));
        p2.o00000(2);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.\u00d600000.toString(), 150);
        p2.o00000(BedingungsVerknuepfung.AND(Bedingung.hat(b_0.newwhilesuper, (Integer)14), Bedingung.hat(voidsuper.o\u00d3\u00d6000, (Integer)10), Bedingung.hat(oooo_4.\u00f8\u00d5\u00f5O00, (Integer)10), Bedingung.hatSfAuswahl(while.\u00d3\u00f5\u00f6000, o0Oo.\u00d4O0000), Bedingung.hat(while.\u00d3o\u00d8000)));
        p2.o00000(3);
        oOOo.o00000(p2);
        p2 = P.\u00d300000(while.\u00d8\u00d8\u00f6000.toString(), 200);
        p2.o00000(BedingungsVerknuepfung.AND(Bedingung.hat(b_0.\u00f4\u00f4\u00d2000, (Integer)14), Bedingung.hat(b_0.\u00f8\u00f4\u00d2000, (Integer)14), Bedingung.hat(voidsuper.\u00d8\u00d8\u00d5000, (Integer)12), Bedingung.hat(voidsuper.thisclassObject, (Integer)12), Bedingung.hat(while.\u00d3o\u00d8000), Bedingung.hatSfAuswahl(while.\u00d5\u00d2o000, o0Oo.\u00f500000), Bedingung.hat(oooo_4.\u00f8\u00d6\u00f5O00, (Integer)7)));
        p2.o00000(1);
        oOOo.o00000(p2);
    }

    protected static ArrayList<P> o00000() {
        ArrayList<P> arrayList = new ArrayList<P>(10);
        P p2 = P.o00000(while.thiswhilenew.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00f8\u00f6O000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00d50\u00d3000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00f6o\u00d5000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00d6\u00d5\u00d4000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00d6o\u00d2000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00f5\u00d5\u00d8000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.ifinterfaceObject.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00d60\u00f8000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00d3\u00d6\u00d3000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00d8\u00d5\u00d8000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00d60\u00d8000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00f5\u00d30000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.nullnewsuper.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00d2\u00d4O000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00f5o\u00d5000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.privateifString.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.\u00f5\u00f6\u00d2000.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        p2 = P.o00000(while.privatereturnnew.toString(), 150);
        p2.o00000(7);
        arrayList.add(p2);
        return arrayList;
    }

    protected static ArrayList<P> \u00d200000() {
        ArrayList<P> arrayList = new ArrayList<P>(10);
        P p2 = P.\u00d300000(while.\u00d8\u00d6o000.toString(), 50);
        p2.o00000(new BedingungsVerknuepfung(VerknuepfungsArt.o00000, Bedingung.hat(voidsuper.returnnullObject, (Integer)7)));
        p2.o00000(1);
        arrayList.add(p2);
        p2 = P.\u00d300000(while.whilepublic.toString(), 50);
        p2.o00000(new BedingungsVerknuepfung(VerknuepfungsArt.o00000, Bedingung.hat(voidsuper.returnnullObject, (Integer)7)));
        p2.o00000(1);
        arrayList.add(p2);
        return arrayList;
    }

    private E() {
    }
}

