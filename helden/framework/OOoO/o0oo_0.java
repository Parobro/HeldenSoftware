/*
 * Decompiled with CFR 0.152.
 */
package helden.framework.oooo;

import helden.framework.oooo.s_0;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 * Renamed from helden.framework.OoOO.O0oO
 */
public final class o0oo_0 {
    private static final int[][] o00000 = new int[][]{{1, 1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 16, 17, 19, 21, 22, 24, 26, 27, 29, 31, 33, 34, 36, 38, 40, 42, 44, 45, 47, 50}, {2, 2, 4, 6, 8, 11, 14, 17, 19, 22, 25, 28, 32, 35, 38, 41, 45, 48, 51, 55, 58, 62, 65, 69, 73, 76, 80, 84, 87, 91, 95, 100}, {3, 2, 6, 9, 13, 17, 21, 25, 29, 34, 38, 43, 47, 51, 55, 60, 65, 70, 75, 80, 85, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 150}, {4, 3, 7, 12, 17, 22, 27, 33, 39, 45, 50, 55, 65, 70, 75, 85, 90, 95, 105, 110, 115, 125, 130, 140, 145, 150, 160, 165, 170, 180, 190, 200}, {5, 4, 9, 15, 21, 28, 34, 41, 48, 55, 65, 70, 80, 85, 95, 105, 110, 120, 130, 135, 145, 155, 165, 170, 180, 190, 200, 210, 220, 230, 240, 250}, {8, 6, 14, 22, 32, 41, 50, 60, 75, 85, 95, 105, 120, 130, 140, 155, 165, 180, 195, 210, 220, 230, 250, 260, 270, 290, 300, 310, 330, 340, 350, 375}, {10, 8, 18, 30, 42, 55, 70, 85, 95, 110, 125, 140, 160, 175, 190, 210, 220, 240, 260, 270, 290, 310, 330, 340, 360, 380, 400, 420, 440, 460, 480, 500}, {20, 16, 35, 60, 85, 110, 140, 165, 195, 220, 250, 280, 320, 350, 380, 410, 450, 480, 510, 550, 580, 620, 650, 690, 720, 760, 800, 830, 870, 910, 950, 1000}};

    public static int super(s_0 s_02) {
        return o0oo_0.super(s_02, 0);
    }

    public static int super(s_0 s_02, boolean bl) {
        if (bl) {
            return o0oo_0.super(s_02);
        }
        return o0oo_0.super(s_02) * 5;
    }

    public static int super(s_0 s_02, int n) {
        int n2 = s_02.\u00d400000();
        n2 = Math.max(s_02.\u00d400000(), s_0.\u00d500000.\u00d400000());
        n = Math.max(n, 0);
        n = Math.min(n, 31);
        int n3 = o00000[n2 - 1][n];
        if (s_02.\u00d400000() < s_0.\u00d500000.\u00d400000()) {
            n3 -= 2;
        }
        n3 = Math.max(n3, 1);
        return n3;
    }

    private o0oo_0() {
    }
}

